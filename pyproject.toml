[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.10
target-version = "py310"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["."]

[tool.poetry]
name = "botender"
version = "0.0.1"
description = "An intelligent interactive social robot to order drinks from. Created for a Furhat Robot."
authors = ["Till Grutschus <till.grutschus@outlook.com>"]
repository = "https://github.com/Grutschus/botender"
license = "MIT License"
readme = "README.md"
packages = [{ include = "botender" }]

[tool.poetry.dependencies]
python = "^3.10"
torch = "^2.1"
torchvision = "^0.16"
opencv-python = "^4.8"
furhat-remote-api = "^1.0"
imageio = { extras = ["ffmpeg"], version = "^2.33" }
numpy = "^1.26"
py-feat = "^0.6"
colorlog = "^6.7"

[tool.poetry.group.dev.dependencies]
pre-commit = "^2.15"
ruff = "^0.1"
jupyter = "^1.0"
ipympl = "^0.9"
opencv-jupyter-ui = "^1.4"
pandas-stubs = "^2.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
